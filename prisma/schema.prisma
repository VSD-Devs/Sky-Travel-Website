// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "darwin", "darwin-arm64"]
}

datasource db {
  provider = "sqlite" // Keep SQLite for local development
  url      = env("DATABASE_URL")
}

// Model for storing contact form enquiries
model Enquiry {
  id             String        @id @default(uuid())
  firstName      String
  lastName       String
  email          String
  phone          String?
  message        String
  type           EnquiryType   @default(GENERAL)
  flightDetails  String?       // JSON string containing flight details
  holidayDetails String?       // JSON string containing holiday details
  packageDetails String?       // JSON string containing package details
  status         EnquiryStatus @default(NEW)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

// Status of enquiries
enum EnquiryStatus {
  NEW
  IN_PROGRESS
  RESPONDED
  CLOSED
}

// Type of enquiries
enum EnquiryType {
  GENERAL
  FLIGHT
  HOLIDAY
  PACKAGE
}

// Model for admin users
model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      UserRole @default(ADMIN)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// User roles
enum UserRole {
  ADMIN
  STAFF
}

// Model for holidays
model Holiday {
  id          String   @id @default(uuid())
  title       String
  description String
  destination String
  duration    String
  price       Float
  imageUrl    String?
  featured    Boolean  @default(false)
  available   Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Trip status enum
enum TripStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

// Trip Plan model for handling customer trip requests
model TripPlan {
  id            String     @id @default(uuid())
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  
  // Trip details
  destination   String
  tripType      String     // flight, hotel, both
  departureDate DateTime
  returnDate    DateTime
  adults        Int        @default(1)
  children      Int        @default(0)
  infants       Int        @default(0)
  
  // Customer information
  customerName  String
  customerEmail String
  
  // Admin tracking fields
  status        TripStatus @default(PENDING)
  notes         String?
  assignedTo    String?    // Staff member handling this request
  
  @@index([status])
  @@index([createdAt])
}
